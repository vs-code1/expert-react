/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const WalletLazyImport = createFileRoute('/wallet')()
const RankingsLazyImport = createFileRoute('/rankings')()
const MarketPlaceLazyImport = createFileRoute('/marketPlace')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const WalletLazyRoute = WalletLazyImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/wallet.lazy').then((d) => d.Route))

const RankingsLazyRoute = RankingsLazyImport.update({
  id: '/rankings',
  path: '/rankings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/rankings.lazy').then((d) => d.Route))

const MarketPlaceLazyRoute = MarketPlaceLazyImport.update({
  id: '/marketPlace',
  path: '/marketPlace',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/marketPlace.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/marketPlace': {
      id: '/marketPlace'
      path: '/marketPlace'
      fullPath: '/marketPlace'
      preLoaderRoute: typeof MarketPlaceLazyImport
      parentRoute: typeof rootRoute
    }
    '/rankings': {
      id: '/rankings'
      path: '/rankings'
      fullPath: '/rankings'
      preLoaderRoute: typeof RankingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/wallet': {
      id: '/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof WalletLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/marketPlace': typeof MarketPlaceLazyRoute
  '/rankings': typeof RankingsLazyRoute
  '/wallet': typeof WalletLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/marketPlace': typeof MarketPlaceLazyRoute
  '/rankings': typeof RankingsLazyRoute
  '/wallet': typeof WalletLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/marketPlace': typeof MarketPlaceLazyRoute
  '/rankings': typeof RankingsLazyRoute
  '/wallet': typeof WalletLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/marketPlace' | '/rankings' | '/wallet'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/marketPlace' | '/rankings' | '/wallet'
  id: '__root__' | '/' | '/marketPlace' | '/rankings' | '/wallet'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  MarketPlaceLazyRoute: typeof MarketPlaceLazyRoute
  RankingsLazyRoute: typeof RankingsLazyRoute
  WalletLazyRoute: typeof WalletLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  MarketPlaceLazyRoute: MarketPlaceLazyRoute,
  RankingsLazyRoute: RankingsLazyRoute,
  WalletLazyRoute: WalletLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/marketPlace",
        "/rankings",
        "/wallet"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/marketPlace": {
      "filePath": "marketPlace.lazy.jsx"
    },
    "/rankings": {
      "filePath": "rankings.lazy.jsx"
    },
    "/wallet": {
      "filePath": "wallet.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
